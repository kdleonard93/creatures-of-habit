name: CI

on:
  push:
    branches: [ main, 'feature/**', 'bugfix/**', 'hotfix/**', 'fix/**', 'task/**', 'release/**' ]
  pull_request:
    types: [opened, synchronize, closed]
    branches: [ main, 'feature/**', 'bugfix/**', 'hotfix/**', 'fix/**', 'task/**', 'release/**' ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    outputs:
      test-success: ${{ steps.test-results.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Create test environment
        run: |
          echo "TURSO_DATABASE_URL=libsql://mock-db.turso.io" >> .env
          echo "TURSO_AUTH_TOKEN=mock-token" >> .env
          echo "PUBLIC_POSTHOG_KEY=phc_mock_posthog_key_for_testing" >> .env
      - name: Check TypeScript types
        run: pnpm run check
      - name: Check code style with Biome
        run: pnpm run format:check
      - name: Run tests
        run: pnpm run test
      - name: Test Results
        id: test-results
        if: always()
        run: echo "Tests completed successfully"

  build:
    name: build
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.outputs.test-success == 'true'
    outputs:
      build-success: ${{ steps.build-results.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Create test environment
        run: |
          echo "TURSO_DATABASE_URL=libsql://mock-db.turso.io" >> .env
          echo "TURSO_AUTH_TOKEN=mock-token" >> .env
          echo "PUBLIC_POSTHOG_KEY=phc_mock_posthog_key_for_testing" >> .env
      - name: Fix case sensitivity issues
        run: |
          # Symlinks for case-sensitive files
          mkdir -p src/lib/components/character
          if [ -f src/lib/components/character/XPBar.svelte ] && [ ! -f src/lib/components/character/XpBar.svelte ]; then
            ln -s XPBar.svelte src/lib/components/character/XpBar.svelte
          fi
      - name: Generate SvelteKit files
        run: npx svelte-kit sync
      - name: Build application
        run: pnpm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: .svelte-kit/
      - name: Build Results
        id: build-results
        if: always()
        run: echo "Build completed successfully"

  required-checks:
    name: required-checks
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    steps:
      - name: Check Test Status
        run: |
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "❌ Test job failed"
            exit 1
          fi
          echo "✅ Test job passed"

      - name: Check Build Status
        run: |
          if [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ Build job failed"
            exit 1
          fi
          echo "✅ Build job passed"

      - name: All Required Checks Passed
        run: echo "🎉 All required checks passed - PR can be merged"
